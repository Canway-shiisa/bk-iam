// Code generated by MockGen. DO NOT EDIT.
// Source: role.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRoleService is a mock of RoleService interface.
type MockRoleService struct {
	ctrl     *gomock.Controller
	recorder *MockRoleServiceMockRecorder
}

// MockRoleServiceMockRecorder is the mock recorder for MockRoleService.
type MockRoleServiceMockRecorder struct {
	mock *MockRoleService
}

// NewMockRoleService creates a new mock instance.
func NewMockRoleService(ctrl *gomock.Controller) *MockRoleService {
	mock := &MockRoleService{ctrl: ctrl}
	mock.recorder = &MockRoleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoleService) EXPECT() *MockRoleServiceMockRecorder {
	return m.recorder
}

// BulkCreateSubjectRoles mocks base method.
func (m *MockRoleService) BulkCreateSubjectRoles(roleType, system string, subjectPKs []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreateSubjectRoles", roleType, system, subjectPKs)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkCreateSubjectRoles indicates an expected call of BulkCreateSubjectRoles.
func (mr *MockRoleServiceMockRecorder) BulkCreateSubjectRoles(roleType, system, subjectPKs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreateSubjectRoles", reflect.TypeOf((*MockRoleService)(nil).BulkCreateSubjectRoles), roleType, system, subjectPKs)
}

// BulkDeleteSubjectRoles mocks base method.
func (m *MockRoleService) BulkDeleteSubjectRoles(roleType, system string, subjectPKs []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkDeleteSubjectRoles", roleType, system, subjectPKs)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkDeleteSubjectRoles indicates an expected call of BulkDeleteSubjectRoles.
func (mr *MockRoleServiceMockRecorder) BulkDeleteSubjectRoles(roleType, system, subjectPKs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkDeleteSubjectRoles", reflect.TypeOf((*MockRoleService)(nil).BulkDeleteSubjectRoles), roleType, system, subjectPKs)
}

// ListRoleSystemIDBySubjectPK mocks base method.
func (m *MockRoleService) ListRoleSystemIDBySubjectPK(pk int64) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRoleSystemIDBySubjectPK", pk)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRoleSystemIDBySubjectPK indicates an expected call of ListRoleSystemIDBySubjectPK.
func (mr *MockRoleServiceMockRecorder) ListRoleSystemIDBySubjectPK(pk interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRoleSystemIDBySubjectPK", reflect.TypeOf((*MockRoleService)(nil).ListRoleSystemIDBySubjectPK), pk)
}

// ListSubjectPKByRole mocks base method.
func (m *MockRoleService) ListSubjectPKByRole(roleType, system string) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListSubjectPKByRole", roleType, system)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListSubjectPKByRole indicates an expected call of ListSubjectPKByRole.
func (mr *MockRoleServiceMockRecorder) ListSubjectPKByRole(roleType, system interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListSubjectPKByRole", reflect.TypeOf((*MockRoleService)(nil).ListSubjectPKByRole), roleType, system)
}
