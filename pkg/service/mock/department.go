// Code generated by MockGen. DO NOT EDIT.
// Source: department.go

// Package mock is a generated GoMock package.
package mock

import (
	types "iam/pkg/service/types"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	sqlx "github.com/jmoiron/sqlx"
)

// MockDepartmentService is a mock of DepartmentService interface.
type MockDepartmentService struct {
	ctrl     *gomock.Controller
	recorder *MockDepartmentServiceMockRecorder
}

// MockDepartmentServiceMockRecorder is the mock recorder for MockDepartmentService.
type MockDepartmentServiceMockRecorder struct {
	mock *MockDepartmentService
}

// NewMockDepartmentService creates a new mock instance.
func NewMockDepartmentService(ctrl *gomock.Controller) *MockDepartmentService {
	mock := &MockDepartmentService{ctrl: ctrl}
	mock.recorder = &MockDepartmentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDepartmentService) EXPECT() *MockDepartmentServiceMockRecorder {
	return m.recorder
}

// BulkCreateSubjectDepartments mocks base method.
func (m *MockDepartmentService) BulkCreateSubjectDepartments(subjectDepartments []types.SubjectDepartment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreateSubjectDepartments", subjectDepartments)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkCreateSubjectDepartments indicates an expected call of BulkCreateSubjectDepartments.
func (mr *MockDepartmentServiceMockRecorder) BulkCreateSubjectDepartments(subjectDepartments interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreateSubjectDepartments", reflect.TypeOf((*MockDepartmentService)(nil).BulkCreateSubjectDepartments), subjectDepartments)
}

// BulkDeleteBySubjectPKsWithTx mocks base method.
func (m *MockDepartmentService) BulkDeleteBySubjectPKsWithTx(tx *sqlx.Tx, pks []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkDeleteBySubjectPKsWithTx", tx, pks)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkDeleteBySubjectPKsWithTx indicates an expected call of BulkDeleteBySubjectPKsWithTx.
func (mr *MockDepartmentServiceMockRecorder) BulkDeleteBySubjectPKsWithTx(tx, pks interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkDeleteBySubjectPKsWithTx", reflect.TypeOf((*MockDepartmentService)(nil).BulkDeleteBySubjectPKsWithTx), tx, pks)
}

// BulkDeleteSubjectDepartments mocks base method.
func (m *MockDepartmentService) BulkDeleteSubjectDepartments(subjectPKs []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkDeleteSubjectDepartments", subjectPKs)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkDeleteSubjectDepartments indicates an expected call of BulkDeleteSubjectDepartments.
func (mr *MockDepartmentServiceMockRecorder) BulkDeleteSubjectDepartments(subjectPKs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkDeleteSubjectDepartments", reflect.TypeOf((*MockDepartmentService)(nil).BulkDeleteSubjectDepartments), subjectPKs)
}

// BulkUpdateSubjectDepartments mocks base method.
func (m *MockDepartmentService) BulkUpdateSubjectDepartments(subjectDepartments []types.SubjectDepartment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkUpdateSubjectDepartments", subjectDepartments)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkUpdateSubjectDepartments indicates an expected call of BulkUpdateSubjectDepartments.
func (mr *MockDepartmentServiceMockRecorder) BulkUpdateSubjectDepartments(subjectDepartments interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkUpdateSubjectDepartments", reflect.TypeOf((*MockDepartmentService)(nil).BulkUpdateSubjectDepartments), subjectDepartments)
}

// GetSubjectDepartmentCount mocks base method.
func (m *MockDepartmentService) GetSubjectDepartmentCount() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSubjectDepartmentCount")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSubjectDepartmentCount indicates an expected call of GetSubjectDepartmentCount.
func (mr *MockDepartmentServiceMockRecorder) GetSubjectDepartmentCount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSubjectDepartmentCount", reflect.TypeOf((*MockDepartmentService)(nil).GetSubjectDepartmentCount))
}

// GetSubjectDepartmentPKs mocks base method.
func (m *MockDepartmentService) GetSubjectDepartmentPKs(subjectPK int64) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSubjectDepartmentPKs", subjectPK)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSubjectDepartmentPKs indicates an expected call of GetSubjectDepartmentPKs.
func (mr *MockDepartmentServiceMockRecorder) GetSubjectDepartmentPKs(subjectPK interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSubjectDepartmentPKs", reflect.TypeOf((*MockDepartmentService)(nil).GetSubjectDepartmentPKs), subjectPK)
}

// ListPagingSubjectDepartment mocks base method.
func (m *MockDepartmentService) ListPagingSubjectDepartment(limit, offset int64) ([]types.SubjectDepartment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPagingSubjectDepartment", limit, offset)
	ret0, _ := ret[0].([]types.SubjectDepartment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPagingSubjectDepartment indicates an expected call of ListPagingSubjectDepartment.
func (mr *MockDepartmentServiceMockRecorder) ListPagingSubjectDepartment(limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPagingSubjectDepartment", reflect.TypeOf((*MockDepartmentService)(nil).ListPagingSubjectDepartment), limit, offset)
}
