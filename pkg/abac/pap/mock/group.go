// Code generated by MockGen. DO NOT EDIT.
// Source: group.go

// Package mock is a generated GoMock package.
package mock

import (
	pap "iam/pkg/abac/pap"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGroupController is a mock of GroupController interface.
type MockGroupController struct {
	ctrl     *gomock.Controller
	recorder *MockGroupControllerMockRecorder
}

// MockGroupControllerMockRecorder is the mock recorder for MockGroupController.
type MockGroupControllerMockRecorder struct {
	mock *MockGroupController
}

// NewMockGroupController creates a new mock instance.
func NewMockGroupController(ctrl *gomock.Controller) *MockGroupController {
	mock := &MockGroupController{ctrl: ctrl}
	mock.recorder = &MockGroupControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupController) EXPECT() *MockGroupControllerMockRecorder {
	return m.recorder
}

// CreateOrUpdateSubjectMembers mocks base method.
func (m *MockGroupController) CreateOrUpdateSubjectMembers(_type, id string, members []pap.SubjectMember) (map[string]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateSubjectMembers", _type, id, members)
	ret0, _ := ret[0].(map[string]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrUpdateSubjectMembers indicates an expected call of CreateOrUpdateSubjectMembers.
func (mr *MockGroupControllerMockRecorder) CreateOrUpdateSubjectMembers(_type, id, members interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateSubjectMembers", reflect.TypeOf((*MockGroupController)(nil).CreateOrUpdateSubjectMembers), _type, id, members)
}

// DeleteSubjectMembers mocks base method.
func (m *MockGroupController) DeleteSubjectMembers(_type, id string, members []pap.Subject) (map[string]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSubjectMembers", _type, id, members)
	ret0, _ := ret[0].(map[string]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSubjectMembers indicates an expected call of DeleteSubjectMembers.
func (mr *MockGroupControllerMockRecorder) DeleteSubjectMembers(_type, id, members interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSubjectMembers", reflect.TypeOf((*MockGroupController)(nil).DeleteSubjectMembers), _type, id, members)
}

// UpdateSubjectMembersExpiredAt mocks base method.
func (m *MockGroupController) UpdateSubjectMembersExpiredAt(_type, id string, members []pap.SubjectMember) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSubjectMembersExpiredAt", _type, id, members)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSubjectMembersExpiredAt indicates an expected call of UpdateSubjectMembersExpiredAt.
func (mr *MockGroupControllerMockRecorder) UpdateSubjectMembersExpiredAt(_type, id, members interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSubjectMembersExpiredAt", reflect.TypeOf((*MockGroupController)(nil).UpdateSubjectMembersExpiredAt), _type, id, members)
}
